{"version":3,"file":"constants.js","names":["DRIVER_TYPE","PLUGIN_TYPE","SERVER_SUBCOMMAND","USE_ALL_PLUGINS","KNOWN_PLUGINS","Object","freeze","images","KNOWN_DRIVERS","uiautomator2","xcuitest","youiengine","windows","mac","mac2","espresso","tizen","flutter","safari","gecko","CACHE_DIR_RELATIVE_PATH","path","join","PKG_HASHFILE_RELATIVE_PATH","EXT_SUBCOMMAND_LIST","EXT_SUBCOMMAND_INSTALL","EXT_SUBCOMMAND_UNINSTALL","EXT_SUBCOMMAND_UPDATE","EXT_SUBCOMMAND_RUN"],"sources":["../../lib/constants.js"],"sourcesContent":["import path from 'path';\n\n/**\n * The name of the extension type for drivers\n */\nexport const DRIVER_TYPE = 'driver';\n\n/**\n * The name of the extension type for plugins\n */\nexport const PLUGIN_TYPE = 'plugin';\n\n/**\n * The `server` command of the `appium` CLI\n */\nexport const SERVER_SUBCOMMAND = 'server';\n\n/**\n * The value of `--use-plugins` if _all_ plugins should be loaded\n */\nexport const USE_ALL_PLUGINS = 'all';\n\n// This is a map of plugin names to npm packages representing those plugins.\n// The plugins in this list will be available to the CLI so users can just\n// type 'appium plugin install 'name'', rather than having to specify the full\n// npm package. I.e., these are the officially recognized plugins.\nexport const KNOWN_PLUGINS = Object.freeze(\n  /** @type {const} */ ({\n    images: '@appium/images-plugin',\n    'execute-driver': '@appium/execute-driver-plugin',\n    'relaxed-caps': '@appium/relaxed-caps-plugin',\n  })\n);\n\n// This is a map of driver names to npm packages representing those drivers.\n// The drivers in this list will be available to the CLI so users can just\n// type 'appium driver install 'name'', rather than having to specify the full\n// npm package. I.e., these are the officially recognized drivers.\nexport const KNOWN_DRIVERS = Object.freeze(\n  /** @type {const} */ ({\n    uiautomator2: 'appium-uiautomator2-driver',\n    xcuitest: 'appium-xcuitest-driver',\n    youiengine: 'appium-youiengine-driver',\n    windows: 'appium-windows-driver',\n    mac: 'appium-mac-driver',\n    mac2: 'appium-mac2-driver',\n    espresso: 'appium-espresso-driver',\n    tizen: 'appium-tizen-driver',\n    flutter: 'appium-flutter-driver',\n    safari: 'appium-safari-driver',\n    gecko: 'appium-geckodriver',\n  })\n);\n\n/**\n * Relative path to directory containing any Appium internal files\n */\nexport const CACHE_DIR_RELATIVE_PATH = path.join('node_modules', '.cache', 'appium');\n\n/**\n * Relative path to hashfile (from `APPIUM_HOME`) of consuming project's `package.json` (if it exists)\n */\nexport const PKG_HASHFILE_RELATIVE_PATH = path.join(CACHE_DIR_RELATIVE_PATH, 'package.hash');\n\nexport const EXT_SUBCOMMAND_LIST = 'list';\nexport const EXT_SUBCOMMAND_INSTALL = 'install';\nexport const EXT_SUBCOMMAND_UNINSTALL = 'uninstall';\nexport const EXT_SUBCOMMAND_UPDATE = 'update';\nexport const EXT_SUBCOMMAND_RUN = 'run';\n"],"mappings":";;;;;;;;;AAAA;;;;AAKO,MAAMA,WAAW,GAAG,QAApB;;AAKA,MAAMC,WAAW,GAAG,QAApB;;AAKA,MAAMC,iBAAiB,GAAG,QAA1B;;AAKA,MAAMC,eAAe,GAAG,KAAxB;;AAMA,MAAMC,aAAa,GAAGC,MAAM,CAACC,MAAP,CACL;EACpBC,MAAM,EAAE,uBADY;EAEpB,kBAAkB,+BAFE;EAGpB,gBAAgB;AAHI,CADK,CAAtB;;AAYA,MAAMC,aAAa,GAAGH,MAAM,CAACC,MAAP,CACL;EACpBG,YAAY,EAAE,4BADM;EAEpBC,QAAQ,EAAE,wBAFU;EAGpBC,UAAU,EAAE,0BAHQ;EAIpBC,OAAO,EAAE,uBAJW;EAKpBC,GAAG,EAAE,mBALe;EAMpBC,IAAI,EAAE,oBANc;EAOpBC,QAAQ,EAAE,wBAPU;EAQpBC,KAAK,EAAE,qBARa;EASpBC,OAAO,EAAE,uBATW;EAUpBC,MAAM,EAAE,sBAVY;EAWpBC,KAAK,EAAE;AAXa,CADK,CAAtB;;;AAmBA,MAAMC,uBAAuB,GAAGC,aAAA,CAAKC,IAAL,CAAU,cAAV,EAA0B,QAA1B,EAAoC,QAApC,CAAhC;;;;AAKA,MAAMC,0BAA0B,GAAGF,aAAA,CAAKC,IAAL,CAAUF,uBAAV,EAAmC,cAAnC,CAAnC;;;AAEA,MAAMI,mBAAmB,GAAG,MAA5B;;AACA,MAAMC,sBAAsB,GAAG,SAA/B;;AACA,MAAMC,wBAAwB,GAAG,WAAjC;;AACA,MAAMC,qBAAqB,GAAG,QAA9B;;AACA,MAAMC,kBAAkB,GAAG,KAA3B"}