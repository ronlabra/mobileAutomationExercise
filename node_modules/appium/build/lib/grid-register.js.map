{"version":3,"file":"grid-register.js","names":["hubUri","config","protocol","hubProtocol","hubHost","hubPort","registerNode","data","addr","port","basePath","configFilePath","_","isString","fs","readFile","err","logger","error","message","JSON","parse","errorAndThrow","postRequest","registerToGrid","postOptions","configHolder","status","axios","Error","debug","configuration","has","property","url","host","id","regRequest","method","register","registerCycleInterval","registerCycle","isNaN","warn","first","setInterval","registerRetry","isAlreadyRegistered","timeout","success","msg"],"sources":["../../lib/grid-register.js"],"sourcesContent":["import axios from 'axios';\nimport {fs} from '@appium/support';\nimport logger from './logger';\nimport _ from 'lodash';\n\nconst hubUri = (config) => {\n  const protocol = config.hubProtocol || 'http';\n  return `${protocol}://${config.hubHost}:${config.hubPort}`;\n};\n\n/**\n * Registers a new node with a selenium grid\n * @param {string|object} data - Path or object representing selenium grid node config file. If a `string`, all subsequent arguments are required!\n * @param {string} [addr] - Bind to this address\n * @param {number} [port] - Bind to this port\n * @param {string} [basePath] - Base path for the grid\n */\nasync function registerNode(data, addr, port, basePath) {\n  let configFilePath;\n  if (_.isString(data)) {\n    configFilePath = data;\n    try {\n      data = await fs.readFile(data, 'utf-8');\n    } catch (err) {\n      logger.error(\n        `Unable to load node configuration file ${configFilePath} to register with grid: ${err.message}`\n      );\n      return;\n    }\n    try {\n      data = JSON.parse(data);\n    } catch (err) {\n      logger.errorAndThrow(\n        `Syntax error in node configuration file ${configFilePath}: ${err.message}`\n      );\n      return;\n    }\n  }\n\n  postRequest(data, addr, port, basePath);\n}\n\nasync function registerToGrid(postOptions, configHolder) {\n  try {\n    const {status} = await axios(postOptions);\n    if (status !== 200) {\n      throw new Error(`Request failed with code ${status}`);\n    }\n    logger.debug(\n      `Appium successfully registered with the the grid on ` + hubUri(configHolder.configuration)\n    );\n  } catch (err) {\n    logger.error(`An attempt to register with the grid was unsuccessful: ${err.message}`);\n  }\n}\n\nfunction postRequest(configHolder, addr, port, basePath) {\n  // Move Selenium 3 configuration properties to configuration object\n  if (!_.has(configHolder, 'configuration')) {\n    let configuration = {};\n    for (const property in configHolder) {\n      if (_.has(configHolder, property) && property !== 'capabilities') {\n        configuration[property] = configHolder[property];\n        delete configHolder[property];\n      }\n    }\n    configHolder.configuration = configuration;\n  }\n\n  // if the node config does not have the appium/webdriver url, host, and port,\n  // automatically add it based on how appium was initialized\n  // otherwise, we will take whatever the user setup\n  // because we will always set localhost/127.0.0.1. this won't work if your\n  // node and grid aren't in the same place\n  if (\n    !configHolder.configuration.url ||\n    !configHolder.configuration.host ||\n    !configHolder.configuration.port\n  ) {\n    configHolder.configuration.url = `http://${addr}:${port}${basePath}`;\n    configHolder.configuration.host = addr;\n    configHolder.configuration.port = port;\n  }\n  // if the node config does not have id automatically add it\n  if (!configHolder.configuration.id) {\n    configHolder.configuration.id = `http://${configHolder.configuration.host}:${configHolder.configuration.port}`;\n  }\n\n  // the post options\n  const regRequest = {\n    url: `${hubUri(configHolder.configuration)}/grid/register`,\n    method: 'POST',\n    data: configHolder,\n  };\n\n  if (configHolder.configuration.register !== true) {\n    logger.debug(`No registration sent (${configHolder.configuration.register} = false)`);\n    return;\n  }\n\n  const registerCycleInterval = configHolder.configuration.registerCycle;\n  if (isNaN(registerCycleInterval) || registerCycleInterval <= 0) {\n    logger.warn(\n      `'registerCycle' is not a valid positive number. ` +\n        `No registration request will be sent to the grid.`\n    );\n    return;\n  }\n  // initiate a new Thread\n  let first = true;\n  logger.debug(\n    `Starting auto register thread for the grid. ` +\n      `Will try to register every ${registerCycleInterval} ms.`\n  );\n  setInterval(async function registerRetry() {\n    if (first) {\n      first = false;\n      await registerToGrid(regRequest, configHolder);\n    } else if (!(await isAlreadyRegistered(configHolder))) {\n      // make the http POST to the grid for registration\n      await registerToGrid(regRequest, configHolder);\n    }\n  }, registerCycleInterval);\n}\n\nasync function isAlreadyRegistered(configHolder) {\n  //check if node is already registered\n  const id = configHolder.configuration.id;\n  try {\n    const {data, status} = await axios({\n      url: `${hubUri(configHolder.configuration)}/grid/api/proxy?id=${id}`,\n      timeout: 10000,\n    });\n    if (status !== 200) {\n      throw new Error(`Request failed with code ${status}`);\n    }\n    if (!data.success) {\n      // if register fail, print the debug msg\n      logger.debug(`Grid registration error: ${data.msg}`);\n    }\n    return data.success;\n  } catch (err) {\n    logger.debug(`Hub down or not responding: ${err.message}`);\n  }\n}\n\nexport default registerNode;\n"],"mappings":"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"}