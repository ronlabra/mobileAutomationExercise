{"version":3,"file":"utils.js","names":["CD_CDN","process","env","npm_config_chromedriver_cdnurl","CHROMEDRIVER_CDNURL","OS","linux","windows","mac","X64","X86","M1_ARCH_SUFFIX","CD_EXECUTABLE_PREFIX","MODULE_NAME","getModuleRoot","_","memoize","isFunction","node","getModuleRootSync","existsSync","readFileSync","require","currentDir","path","dirname","resolve","__filename","isAtFsRoot","manifestPath","join","JSON","parse","name","ign","length","Error","root","CHROMEDRIVER_CHROME_MAPPING","CD_BASE_DIR","getMostRecentChromedriver","mapping","isEmpty","last","keys","sort","compareVersions","CD_VER","npm_config_chromedriver_version","CHROMEDRIVER_VERSION","getChromeVersion","adb","bundleId","versionName","getPackageInfo","getChromedriverDir","osName","getOsName","getChromedriverBinaryPath","rootDir","pathSuffix","paths","fs","glob","cwd","absolute","nocase","nodir","strict","first","retrieveData","url","headers","opts","timeout","responseType","axios","data","system","isWindows","isMac","getOsInfo","arch","hardwareName","trim","exec","getBaseDriverInstance","BaseDriver","generateLogPrefix","obj","sessionId","helpers","generateDriverLogPrefix"],"sources":["../../lib/utils.js"],"sourcesContent":["import _ from 'lodash';\nimport { system, fs, node } from 'appium/support';\nimport { BaseDriver } from 'appium/driver';\nimport path from 'path';\nimport { compareVersions } from 'compare-versions';\nimport axios from 'axios';\nimport { exec } from 'teen_process';\n\nconst CD_CDN = process.env.npm_config_chromedriver_cdnurl\n  || process.env.CHROMEDRIVER_CDNURL\n  || 'https://chromedriver.storage.googleapis.com';\nconst OS = {\n  linux: 'linux',\n  windows: 'win',\n  mac: 'mac'\n};\nconst X64 = '64';\nconst X86 = '32';\nconst M1_ARCH_SUFFIX = '_m1';\nconst CD_EXECUTABLE_PREFIX = 'chromedriver';\nconst MODULE_NAME = 'appium-chromedriver';\n\n/**\n * Calculates the path to the current module's root folder\n *\n * @returns {string} The full path to module root\n * @throws {Error} If the current module root folder cannot be determined\n */\nconst getModuleRoot = _.memoize(function getModuleRoot () {\n  // TODO: Get rid of the condition after a while, so clients have enough time to bump their server to v44\n  // TODO: Commit date: 09.09.2022\n  if (!_.isFunction(node.getModuleRootSync)) {\n    const { existsSync, readFileSync } = require('fs');\n    let currentDir = path.dirname(path.resolve(__filename));\n    let isAtFsRoot = false;\n    while (!isAtFsRoot) {\n      const manifestPath = path.join(currentDir, 'package.json');\n      try {\n        if (existsSync(manifestPath) &&\n            JSON.parse(readFileSync(manifestPath, 'utf8')).name === MODULE_NAME) {\n          return currentDir;\n        }\n      } catch (ign) {}\n      currentDir = path.dirname(currentDir);\n      isAtFsRoot = currentDir.length <= path.dirname(currentDir).length;\n    }\n    throw new Error(`Cannot find the root folder of the ${MODULE_NAME} Node.js module`);\n  }\n\n  const root = node.getModuleRootSync(MODULE_NAME, __filename);\n  if (!root) {\n    throw new Error(`Cannot find the root folder of the ${MODULE_NAME} Node.js module`);\n  }\n  return root;\n});\n\n// Chromedriver version: minimum Chrome version\nconst CHROMEDRIVER_CHROME_MAPPING = require(path.join(getModuleRoot(), 'config', 'mapping.json'));\nconst CD_BASE_DIR = path.join(getModuleRoot(), 'chromedriver');\n\nfunction getMostRecentChromedriver (mapping = CHROMEDRIVER_CHROME_MAPPING) {\n  if (_.isEmpty(mapping)) {\n    throw new Error('Unable to get most recent Chromedriver version from empty mapping');\n  }\n  return _.last(_.keys(mapping).sort(compareVersions));\n}\n\nconst CD_VER = process.env.npm_config_chromedriver_version\n  || process.env.CHROMEDRIVER_VERSION\n  || getMostRecentChromedriver();\n\nasync function getChromeVersion (adb, bundleId) {\n  const {versionName} = await adb.getPackageInfo(bundleId);\n  return versionName;\n}\n\nfunction getChromedriverDir (osName = getOsName()) {\n  return path.resolve(CD_BASE_DIR, osName);\n}\n\nasync function getChromedriverBinaryPath (osName = getOsName()) {\n  const rootDir = getChromedriverDir(osName);\n  const pathSuffix = osName === OS.windows ? '.exe' : '';\n  const paths = await fs.glob(`${CD_EXECUTABLE_PREFIX}*${pathSuffix}`, {\n    cwd: rootDir,\n    absolute: true,\n    nocase: true,\n    nodir: true,\n    strict: false,\n  });\n  return _.isEmpty(paths)\n    ? path.resolve(rootDir, `${CD_EXECUTABLE_PREFIX}${pathSuffix}`)\n    : _.first(paths);\n}\n\nasync function retrieveData (url, headers, opts = {}) {\n  const {\n    timeout = 5000,\n    responseType = 'text',\n  } = opts;\n  return (await axios({\n    url,\n    headers,\n    timeout,\n    responseType,\n  })).data;\n}\n\nconst getOsName = _.memoize(function getOsName () {\n  if (system.isWindows()) {\n    return OS.windows;\n  }\n  if (system.isMac()) {\n    return OS.mac;\n  }\n  return OS.linux;\n});\n\nconst getOsInfo = _.memoize(async function getOsInfo () {\n  return {\n    name: getOsName(),\n    arch: await system.arch(),\n    hardwareName: system.isWindows() ? null : _.trim(await exec('uname', ['-m'])),\n  };\n});\n\nconst getBaseDriverInstance = _.memoize(() => new BaseDriver({}, false));\n\n/**\n * Generates log prefix string\n *\n * @param {object} obj log owner instance\n * @param {string?} sessionId Optional session identifier\n * @returns {string}\n */\nfunction generateLogPrefix (obj, sessionId = null) {\n  return getBaseDriverInstance().helpers.generateDriverLogPrefix(obj, sessionId);\n}\n\n\nexport {\n  getChromeVersion, getChromedriverDir, getChromedriverBinaryPath, getOsName,\n  CD_BASE_DIR, CD_CDN, CD_VER, CHROMEDRIVER_CHROME_MAPPING, getMostRecentChromedriver,\n  retrieveData, getOsInfo, OS, X64, X86, M1_ARCH_SUFFIX, generateLogPrefix,\n};\n"],"mappings":"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"}